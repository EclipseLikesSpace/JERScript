// Fibonacci Sequence

fib > (n)->{
    // Initalize the functions

    // A returns one, as the final statement in a lambda function is always a return
    a>()->1
    // If statement to check if N is equal to 2, go to A otherwise go to C
    b>()-> {
        if (eq(n 2) a c)
    }
    c>()->{
        math(fib(math(n "-1")) "+" fib(math(n "-2")))
    }

    // Initalize the main statement
    if (eq(n 1) a b)
}

i>0
repeat(10 ()->{
    i>math(concat(i "+ 1"))
    write(fib(i))
})
x>true

circumfrence > (diameter) ->{
    math(diameter "* pi")
}

write(x)
write(circumfrence(2))

//d > ["Test" "Test 2"]
//write(getArrayLength(d))


e>(d)->{
    if(eq(d 1) ()->self("eclipse") ()->self("rehan") )
}

f>floor(random(0 1))
write(e(f))